{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Blood Request List\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"table table-hover\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Patient Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Patient Number\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Hospital Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Requested Blood Group\")])], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  scope: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notificationList, bloodList => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      class: \"table-success\",\n      key: bloodList.NotificationClass.requestId\n    }, [_createElementVNode(\"th\", _hoisted_6, _toDisplayString(bloodList.NotificationClass.patientName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bloodList.NotificationClass.patientNumber), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bloodList.NotificationClass.hospitalName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bloodList.NotificationClass.requestedBloodType), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","notificationList","bloodList","key","NotificationClass","requestId","_hoisted_6","_toDisplayString","patientName","patientNumber","hospitalName","requestedBloodType"],"sources":["/home/annoy/vueJs project/blood-and-eye-org-system/src/views/blood-org/bloodReqNotification.vue"],"sourcesContent":["<template>\n      <div class=\"container\">\n    <h1>Blood Request List</h1>\n    <div class=\"container\">\n      <table class=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Patient Name</th>\n            <th scope=\"col\">Patient Number</th>\n            <th scope=\"col\">Hospital Name</th>\n            <th scope=\"col\">Requested Blood Group</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            class=\"table-success\"\n            v-for=\"bloodList in notificationList\"\n            :key=\"bloodList.NotificationClass.requestId\"\n          >\n            <th scope=\"row\">{{ bloodList.NotificationClass.patientName }}</th>\n            <td>{{ bloodList.NotificationClass.patientNumber }}</td>\n            <td>{{ bloodList.NotificationClass.hospitalName }}</td>\n            <td>{{ bloodList.NotificationClass.requestedBloodType }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport backendRestApi from \"@/service/backendRestApi\";\nexport default {\n  name: \"bloodReqNotification\",\n  data() {\n    return {\n      notificationList: [],\n    };\n  },\n  created() {\n    this.fetchBloodReqNotification();\n  },\n  methods: {\n    async fetchBloodReqNotification() {\n      try {\n        const response = await backendRestApi.bloodReqList();\n        console.log(response.data);\n        // this.notificationList = response.data.map((bloodList) => ({\n        //   NotificationClass: {\n        //     requestId: bloodList.requestId || \"\",\n        //     patientName: bloodList.patientName || \"\",\n        //     patientNumber: bloodList.patientNumber || \"\",\n        //     hospitalName: bloodList.hospitalName || \"\",\n        //     requestedBloodType: bloodList.requestedBloodType || \"\",\n        //   },\n        // }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";;EACWA,KAAK,EAAC;AAAW;gCACxBC,mBAAA,CAA2B,YAAvB,oBAAkB;;EACjBD,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAmB;gCAC9BC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAiC;EAA7BC,KAAK,EAAC;AAAK,GAAC,cAAY,G,aAC5BD,mBAAA,CAAmC;EAA/BC,KAAK,EAAC;AAAK,GAAC,gBAAc,G,aAC9BD,mBAAA,CAAkC;EAA9BC,KAAK,EAAC;AAAK,GAAC,eAAa,G,aAC7BD,mBAAA,CAA0C;EAAtCC,KAAK,EAAC;AAAK,GAAC,uBAAqB,E;;EASjCA,KAAK,EAAC;AAAK;;uBAlBrBC,mBAAA,CA0BE,OA1BFC,UA0BE,GAzBJC,UAA2B,EAC3BJ,mBAAA,CAuBM,OAvBNK,UAuBM,GAtBJL,mBAAA,CAqBQ,SArBRM,UAqBQ,GApBNC,UAOQ,EACRP,mBAAA,CAWQ,iB,kBAVNE,mBAAA,CASKM,SAAA,QAAAC,WAAA,CAPiBC,KAAA,CAAAC,gBAAgB,EAA7BC,SAAS;yBAFlBV,mBAAA,CASK;MARHH,KAAK,EAAC,eAAe;MAEpBc,GAAG,EAAED,SAAS,CAACE,iBAAiB,CAACC;QAElCf,mBAAA,CAAkE,MAAlEgB,UAAkE,EAAAC,gBAAA,CAA/CL,SAAS,CAACE,iBAAiB,CAACI,WAAW,kBAC1DlB,mBAAA,CAAwD,YAAAiB,gBAAA,CAAjDL,SAAS,CAACE,iBAAiB,CAACK,aAAa,kBAChDnB,mBAAA,CAAuD,YAAAiB,gBAAA,CAAhDL,SAAS,CAACE,iBAAiB,CAACM,YAAY,kBAC/CpB,mBAAA,CAA6D,YAAAiB,gBAAA,CAAtDL,SAAS,CAACE,iBAAiB,CAACO,kBAAkB,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}