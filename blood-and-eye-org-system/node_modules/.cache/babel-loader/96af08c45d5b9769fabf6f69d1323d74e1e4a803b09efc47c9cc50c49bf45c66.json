{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'chatBotAI',\n  data() {\n    return {\n      API_Key: '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',\n      API_URL: 'https://api.openai.com/v1/chat/completions',\n      requestCount: 0,\n      lastRequestTime: 0,\n      MAX_REQUESTS_PER_MINUTE: 60 // Define the maximum number of requests per minute\n    };\n  },\n\n  methods: {\n    generateText() {\n      if (this.$refs.query_area.value === '') {\n        alert('Invalid Input');\n        this.$refs.query_area.value = '';\n        return false;\n      } else {\n        this.$refs.myButton.disabled = true;\n        this.$refs.myButton.style.cursor = 'wait';\n        this.$refs.myButton.innerText = 'Generating...';\n        const headers = {\n          Authorization: `Bearer ${this.API_Key}`,\n          'Content-Type': 'application/json'\n        };\n        const data = {\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: this.$refs.query_area.value\n          }]\n        };\n        this.makeRequest(data, headers);\n      }\n    },\n    makeRequest(data, headers) {\n      const currentTime = new Date().getTime();\n      if (this.requestCount >= this.MAX_REQUESTS_PER_MINUTE && currentTime - this.lastRequestTime < 60000) {\n        // Exceeded rate limit, display an error or take appropriate action\n        console.error('Exceeded rate limit');\n        this.$refs.myButton.disabled = false;\n        this.$refs.myButton.style.cursor = 'pointer';\n        return;\n      }\n      axios.post(this.API_URL, data, {\n        headers\n      }).then(response => {\n        console.log(response.data);\n        this.printLikeChatGPT(response.data.choices[0].message.content);\n        this.$refs.myButton.disabled = true;\n        this.$refs.myButton.innerText = 'Generate Text';\n        this.$refs.query_area.value = '';\n\n        // Update rate limiting variables\n        this.requestCount++;\n        this.lastRequestTime = currentTime;\n      }).catch(error => {\n        console.error(error);\n        this.$refs.myButton.disabled = false;\n        this.$refs.myButton.style.cursor = 'pointer';\n      });\n    },\n    printLikeChatGPT(data) {\n      this.$refs.myButton.disabled = false;\n      this.$refs.myButton.style.cursor = 'pointer';\n      const substring = data;\n      let i = 0;\n      const setInter = setInterval(() => {\n        this.$refs.text_area.value += substring.slice(i, i + 5);\n        i += 5;\n        if (this.$refs.text_area.value == data) {\n          clearInterval(setInter);\n        }\n      }, 200);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","API_Key","API_URL","requestCount","lastRequestTime","MAX_REQUESTS_PER_MINUTE","methods","generateText","$refs","query_area","value","alert","myButton","disabled","style","cursor","innerText","headers","Authorization","model","messages","role","content","makeRequest","currentTime","Date","getTime","console","error","post","then","response","log","printLikeChatGPT","choices","message","catch","substring","i","setInter","setInterval","text_area","slice","clearInterval"],"sources":["/home/annoy/vueJs project/blood-and-eye-org-system/src/views/chatBotAI.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\">\n      <div class=\"card-border\">\n        <div class=\"container\">\n          <h1 style=\"margin: 20px;\">Generate Solutions using Open AI</h1>\n          <div class=\"Text-Area\">\n            <textarea id=\"text_area\" ref=\"text_area\" cols=\"30\" rows=\"10\"></textarea>\n          </div>\n          <div class=\"Query-Area\">\n            <input type=\"text\" ref=\"query_area\" id=\"query_area\" placeholder=\"Enter your Query\">\n          </div>\n          <div class=\"Btns\">\n            <button id=\"btn1\" ref=\"myButton\" @click=\"generateText\">Generate Text</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'chatBotAI',\n  data() {\n    return {\n      API_Key: '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',\n      API_URL: 'https://api.openai.com/v1/chat/completions',\n      requestCount: 0,\n      lastRequestTime: 0,\n      MAX_REQUESTS_PER_MINUTE: 60, // Define the maximum number of requests per minute\n    };\n  },\n  methods: {\n    generateText() {\n      if (this.$refs.query_area.value === '') {\n        alert('Invalid Input');\n        this.$refs.query_area.value = '';\n        return false;\n      } else {\n        this.$refs.myButton.disabled = true;\n        this.$refs.myButton.style.cursor = 'wait';\n        this.$refs.myButton.innerText = 'Generating...';\n        const headers = {\n          Authorization: `Bearer ${this.API_Key}`,\n          'Content-Type': 'application/json',\n        };\n        const data = {\n          model: 'gpt-3.5-turbo',\n          messages: [{ role: 'user', content: this.$refs.query_area.value }],\n        };\n\n        this.makeRequest(data, headers);\n      }\n    },\n\n    makeRequest(data, headers) {\n      const currentTime = new Date().getTime();\n      if (this.requestCount >= this.MAX_REQUESTS_PER_MINUTE && currentTime - this.lastRequestTime < 60000) {\n        // Exceeded rate limit, display an error or take appropriate action\n        console.error('Exceeded rate limit');\n        this.$refs.myButton.disabled = false;\n        this.$refs.myButton.style.cursor = 'pointer';\n        return;\n      }\n\n      axios\n        .post(this.API_URL, data, { headers })\n        .then(response => {\n          console.log(response.data);\n          this.printLikeChatGPT(response.data.choices[0].message.content);\n          this.$refs.myButton.disabled = true;\n          this.$refs.myButton.innerText = 'Generate Text';\n          this.$refs.query_area.value = '';\n\n          // Update rate limiting variables\n          this.requestCount++;\n          this.lastRequestTime = currentTime;\n        })\n        .catch(error => {\n          console.error(error);\n          this.$refs.myButton.disabled = false;\n          this.$refs.myButton.style.cursor = 'pointer';\n        });\n    },\n\n    printLikeChatGPT(data) {\n      this.$refs.myButton.disabled = false;\n      this.$refs.myButton.style.cursor = 'pointer';\n      const substring = data;\n      let i = 0;\n      const setInter = setInterval(() => {\n        this.$refs.text_area.value += substring.slice(i, i + 5);\n        i += 5;\n        if (this.$refs.text_area.value == data) {\n          clearInterval(setInter);\n        }\n      }, 200);\n    },\n  },\n};\n\n</script>\n\n<style scoped>\n.card {\n  display: flex;\n   /* background-color: #504fb5;  */\n  height: 100%;\n  justify-content: center;\n}\n\n.card-border {\n  border: outset;\n  color: black;\n  background-color: rgb(16, 185, 59);\n   box-shadow: rgba(132, 234, 229, 0.2) 0 80px 15px 15px;\n  /* background-image: linear-gradient(144deg,#AF40FF, #5B42F3 50%,#00DDEB);  */\n  border-radius: 20px;\n  \n}\n\n.container {\n  width: auto;\n  height: 100%;\n}\n.Text-Area {\n  display: flex;\n  height: 28rem;\n  justify-content: center;\n}\n\n#text_area {\n  resize: none;\n  height: 70%;\n  color: rgba(69, 115, 176, 0.855);\n  border-radius: 10px;\n  width: 90%;\n}\n\n.Query-Area {\n  display: flex;\n  justify-content: center;\n}\n\n#query_area {\n  display: flex;\n  color: rgb(44, 98, 89);\n  position: relative;\n  margin: 5px;\n  bottom: 130px;\n  width: 85%;\n  font-weight: bolder;\n  height: 30px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.Btns {\n  display: flex;\n  justify-content: center;\n  position: relative;\n  bottom: 125px;\n  margin: 20px;\n  width: 100%;\n}\n\n#btn1 {\n  display: flex;\n  width: 80%;\n  background-color: black;\n  color: white;\n  height: 50px;\n  font-weight: bold;\n  border-radius: 12px;\n  justify-content: center;\n  align-items: center;\n  margin-right: 30px;\n}\n#btn1:hover {\n  display: flex;\n  width: 80%;\n  cursor:pointer;\n  background-color: white;\n  transition: 1s;\n  color: black;\n  border-radius: 12px;\n  justify-content: center;\n  align-items: center;\n  margin-right: 30px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}