{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport backendRestApi from \"@/service/backendRestApi\";\nexport default {\n  name: \"searchBlood\",\n  data() {\n    return {\n      searchValue: \"\",\n      searchOption: \"\",\n      bloodOrg: []\n    };\n  },\n  methods: {\n    searchOrg(searchOption, searchValue) {\n      switch (searchOption) {\n        case \"division\":\n          this.searchByDivision(searchValue);\n          break;\n        case \"distric\":\n          this.searchByDistric(searchValue);\n          break;\n        case \"upazila\":\n          this.searchByUpazila(searchValue);\n          break;\n        case \"bloodType\":\n          this.searchByBloodType(searchValue);\n          break;\n      }\n    },\n    async searchByDivision(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByDivision(searchValue);\n        this.bloodOrg = response.data.map(organizations => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision: organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric: organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila: organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\"\n          }\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchByDistric(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByDistric(searchValue);\n        this.bloodOrg = response.data.map(organizations => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision: organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric: organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila: organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\"\n          }\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchByUpazila(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByUpazila(searchValue);\n        this.bloodOrg = response.data.map(organizations => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision: organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric: organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila: organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\"\n          }\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchByBloodType(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByBloodType(searchValue);\n        this.bloodOrg = response.data.map(organizations => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision: organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric: organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila: organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\"\n          }\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    goTobloodRequest(bloodOrgName, bloodOrganizationEmail, bloodGroup) {\n      this.$router.push({\n        name: \"bloodRequest\",\n        params: {\n          orgName: bloodOrgName,\n          orgEmail: bloodOrganizationEmail,\n          bloodType: bloodGroup\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["backendRestApi","name","data","searchValue","searchOption","bloodOrg","methods","searchOrg","searchByDivision","searchByDistric","searchByUpazila","searchByBloodType","response","searchBloodByDivision","map","organizations","BloodOrganizationClass","bloodOrganizationId","bloodOrganizationName","bloodOrganizationEmail","bloodOrganizationDivision","bloodOrganizationDistric","bloodOrganizationUpozila","bloods","error","console","log","searchBloodByDistric","searchBloodByUpazila","searchBloodByBloodType","goTobloodRequest","bloodOrgName","bloodGroup","$router","push","params","orgName","orgEmail","bloodType"],"sources":["/home/annoy/vueJs project/blood-and-eye-org-system/src/views/User-blood-bank/searchBlood.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Search Blood</h1>\n    <div class=\"container text-center mt-5\">\n      <!-- Search form -->\n      <div class=\"row\">\n        <div class=\"col\">\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            v-model=\"searchOption\"\n          >\n            <option selected>Search By</option>\n            <option value=\"division\">Division</option>\n            <option value=\"distric\">Distric</option>\n            <option value=\"upazila\">Upazila</option>\n            <option value=\"bloodType\">Blood Group</option>\n          </select>\n        </div>\n        <div class=\"col\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Enter Blood type or Division or District or Upazila\"\n            aria-label=\"search\"\n            v-model=\"searchValue\"\n          />\n        </div>\n        <div class=\"col\">\n          <button\n            type=\"button\"\n            @click=\"searchOrg(searchOption, searchValue)\"\n            class=\"btn btn-success\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div\n          class=\"col\"\n          v-for=\"organizations in bloodOrg\"\n          :key=\"organizations.BloodOrganizationClass.bloodOrganizationId\"\n        >\n          <div\n            class=\"card text-white bg-success mt-5 mb-3\"\n            style=\"max-width: 20rem\"\n          >\n            <div class=\"card-header\">\n              {{ organizations.BloodOrganizationClass.bloodOrganizationName }}\n            </div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">\n                {{ organizations.BloodOrganizationClass.bloods }}\n              </h5>\n              <p class=\"card-text\">\n                {{\n                  organizations.BloodOrganizationClass.bloodOrganizationEmail\n                }}\n              </p>\n              <p class=\"card-text\">\n                {{\n                  organizations.BloodOrganizationClass.bloodOrganizationDivision\n                }}\n              </p>\n              <p class=\"card-text\">\n                {{\n                  organizations.BloodOrganizationClass.bloodOrganizationDistric\n                }}\n              </p>\n              <p class=\"card-text\">\n                {{\n                  organizations.BloodOrganizationClass.bloodOrganizationUpozila\n                }}\n              </p>\n\n              <button\n                @click=\"\n                  goTobloodRequest(\n                    organizations.BloodOrganizationClass.bloodOrganizationName,\n                    organizations.BloodOrganizationClass.bloodOrganizationEmail,\n                    organizations.BloodOrganizationClass.bloods\n                  )\n                \"\n                class=\"btn btn-success\"\n                type=\"button\"\n              >\n                Send Request\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Remove the container if you want to extend the Footer to full width. -->\n</template>\n\n<script>\nimport backendRestApi from \"@/service/backendRestApi\";\nexport default {\n  name: \"searchBlood\",\n  data() {\n    return {\n      searchValue: \"\",\n      searchOption: \"\",\n      bloodOrg: [],\n    };\n  },\n  methods: {\n    searchOrg(searchOption, searchValue) {\n      switch (searchOption) {\n        case \"division\":\n          this.searchByDivision(searchValue);\n          break;\n        case \"distric\":\n          this.searchByDistric(searchValue);\n          break;\n        case \"upazila\":\n          this.searchByUpazila(searchValue);\n          break;\n        case \"bloodType\":\n          this.searchByBloodType(searchValue);\n          break;\n      }\n    },\n    async searchByDivision(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByDivision(\n          searchValue\n        );\n        this.bloodOrg = response.data.map((organizations) => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision:\n              organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric:\n              organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila:\n              organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\",\n          },\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchByDistric(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByDistric(searchValue);\n        this.bloodOrg = response.data.map((organizations) => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision:\n              organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric:\n              organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila:\n              organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\",\n          },\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchByUpazila(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByUpazila(searchValue);\n        this.bloodOrg = response.data.map((organizations) => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision:\n              organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric:\n              organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila:\n              organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\",\n          },\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchByBloodType(searchValue) {\n      try {\n        const response = await backendRestApi.searchBloodByBloodType(\n          searchValue\n        );\n        this.bloodOrg = response.data.map((organizations) => ({\n          BloodOrganizationClass: {\n            bloodOrganizationId: organizations.bloodOrganizationId || \"\",\n            bloodOrganizationName: organizations.bloodOrganizationName || \"\",\n            bloodOrganizationEmail: organizations.bloodOrganizationEmail || \"\",\n            bloodOrganizationDivision:\n              organizations.bloodOrganizationDivision || \"\",\n            bloodOrganizationDistric:\n              organizations.bloodOrganizationDistric || \"\",\n            bloodOrganizationUpozila:\n              organizations.bloodOrganizationUpozila || \"\",\n            bloods: organizations.bloods || \"\",\n          },\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    goTobloodRequest(bloodOrgName, bloodOrganizationEmail, bloodGroup) {\n      this.$router.push({\n        name: \"bloodRequest\",\n        params: {\n          orgName: bloodOrgName,\n          orgEmail: bloodOrganizationEmail,\n          bloodType: bloodGroup,\n        },\n      });\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";AAoGA,OAAOA,cAAa,MAAO,0BAA0B;AACrD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACH,YAAY,EAAED,WAAW,EAAE;MACnC,QAAQC,YAAY;QAClB,KAAK,UAAU;UACb,IAAI,CAACI,gBAAgB,CAACL,WAAW,CAAC;UAClC;QACF,KAAK,SAAS;UACZ,IAAI,CAACM,eAAe,CAACN,WAAW,CAAC;UACjC;QACF,KAAK,SAAS;UACZ,IAAI,CAACO,eAAe,CAACP,WAAW,CAAC;UACjC;QACF,KAAK,WAAW;UACd,IAAI,CAACQ,iBAAiB,CAACR,WAAW,CAAC;UACnC;MACJ;IACF,CAAC;IACD,MAAMK,gBAAgBA,CAACL,WAAW,EAAE;MAClC,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMZ,cAAc,CAACa,qBAAqB,CACzDV,WACF,CAAC;QACD,IAAI,CAACE,QAAO,GAAIO,QAAQ,CAACV,IAAI,CAACY,GAAG,CAAEC,aAAa,KAAM;UACpDC,sBAAsB,EAAE;YACtBC,mBAAmB,EAAEF,aAAa,CAACE,mBAAkB,IAAK,EAAE;YAC5DC,qBAAqB,EAAEH,aAAa,CAACG,qBAAoB,IAAK,EAAE;YAChEC,sBAAsB,EAAEJ,aAAa,CAACI,sBAAqB,IAAK,EAAE;YAClEC,yBAAyB,EACvBL,aAAa,CAACK,yBAAwB,IAAK,EAAE;YAC/CC,wBAAwB,EACtBN,aAAa,CAACM,wBAAuB,IAAK,EAAE;YAC9CC,wBAAwB,EACtBP,aAAa,CAACO,wBAAuB,IAAK,EAAE;YAC9CC,MAAM,EAAER,aAAa,CAACQ,MAAK,IAAK;UAClC;QACF,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMf,eAAeA,CAACN,WAAW,EAAE;MACjC,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMZ,cAAc,CAAC2B,oBAAoB,CAACxB,WAAW,CAAC;QACvE,IAAI,CAACE,QAAO,GAAIO,QAAQ,CAACV,IAAI,CAACY,GAAG,CAAEC,aAAa,KAAM;UACpDC,sBAAsB,EAAE;YACtBC,mBAAmB,EAAEF,aAAa,CAACE,mBAAkB,IAAK,EAAE;YAC5DC,qBAAqB,EAAEH,aAAa,CAACG,qBAAoB,IAAK,EAAE;YAChEC,sBAAsB,EAAEJ,aAAa,CAACI,sBAAqB,IAAK,EAAE;YAClEC,yBAAyB,EACvBL,aAAa,CAACK,yBAAwB,IAAK,EAAE;YAC/CC,wBAAwB,EACtBN,aAAa,CAACM,wBAAuB,IAAK,EAAE;YAC9CC,wBAAwB,EACtBP,aAAa,CAACO,wBAAuB,IAAK,EAAE;YAC9CC,MAAM,EAAER,aAAa,CAACQ,MAAK,IAAK;UAClC;QACF,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMd,eAAeA,CAACP,WAAW,EAAE;MACjC,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMZ,cAAc,CAAC4B,oBAAoB,CAACzB,WAAW,CAAC;QACvE,IAAI,CAACE,QAAO,GAAIO,QAAQ,CAACV,IAAI,CAACY,GAAG,CAAEC,aAAa,KAAM;UACpDC,sBAAsB,EAAE;YACtBC,mBAAmB,EAAEF,aAAa,CAACE,mBAAkB,IAAK,EAAE;YAC5DC,qBAAqB,EAAEH,aAAa,CAACG,qBAAoB,IAAK,EAAE;YAChEC,sBAAsB,EAAEJ,aAAa,CAACI,sBAAqB,IAAK,EAAE;YAClEC,yBAAyB,EACvBL,aAAa,CAACK,yBAAwB,IAAK,EAAE;YAC/CC,wBAAwB,EACtBN,aAAa,CAACM,wBAAuB,IAAK,EAAE;YAC9CC,wBAAwB,EACtBP,aAAa,CAACO,wBAAuB,IAAK,EAAE;YAC9CC,MAAM,EAAER,aAAa,CAACQ,MAAK,IAAK;UAClC;QACF,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMb,iBAAiBA,CAACR,WAAW,EAAE;MACnC,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMZ,cAAc,CAAC6B,sBAAsB,CAC1D1B,WACF,CAAC;QACD,IAAI,CAACE,QAAO,GAAIO,QAAQ,CAACV,IAAI,CAACY,GAAG,CAAEC,aAAa,KAAM;UACpDC,sBAAsB,EAAE;YACtBC,mBAAmB,EAAEF,aAAa,CAACE,mBAAkB,IAAK,EAAE;YAC5DC,qBAAqB,EAAEH,aAAa,CAACG,qBAAoB,IAAK,EAAE;YAChEC,sBAAsB,EAAEJ,aAAa,CAACI,sBAAqB,IAAK,EAAE;YAClEC,yBAAyB,EACvBL,aAAa,CAACK,yBAAwB,IAAK,EAAE;YAC/CC,wBAAwB,EACtBN,aAAa,CAACM,wBAAuB,IAAK,EAAE;YAC9CC,wBAAwB,EACtBP,aAAa,CAACO,wBAAuB,IAAK,EAAE;YAC9CC,MAAM,EAAER,aAAa,CAACQ,MAAK,IAAK;UAClC;QACF,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDM,gBAAgBA,CAACC,YAAY,EAAEZ,sBAAsB,EAAEa,UAAU,EAAE;MACjE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAChBjC,IAAI,EAAE,cAAc;QACpBkC,MAAM,EAAE;UACNC,OAAO,EAAEL,YAAY;UACrBM,QAAQ,EAAElB,sBAAsB;UAChCmB,SAAS,EAAEN;QACb;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}