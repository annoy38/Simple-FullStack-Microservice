{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport backendEyeRestApi from \"@/service/backendEyeRestApi\";\nexport default {\n  name: \"eyeSearch\",\n  data() {\n    return {\n      searchValue: \"\",\n      searchOption: \"\",\n      eyeOrg: []\n    };\n  },\n  created() {\n    this.fetchAllEyeOrg();\n  },\n  methods: {\n    async fetchAllEyeOrg() {\n      try {\n        const response = await backendEyeRestApi.allEyeOrg();\n        this.eyeOrg = response.data.map(organizations => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\"\n          }\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    searchEyeOrg(searchOption, searchValue) {\n      switch (searchOption) {\n        case \"division\":\n          this.searchEyeByDivision(searchValue);\n          break;\n        case \"distric\":\n          this.searchEyeByDistric(searchValue);\n          break;\n        case \"upazila\":\n          this.searchEyeByUpazila(searchValue);\n          break;\n      }\n    },\n    async searchEyeByDivision(searchValue) {\n      try {\n        const response = await backendEyeRestApi.searchEyeOrgByDivision(searchValue);\n        this.eyeOrg = response.data.map(organizations => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\"\n          }\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async searchEyeByDistric(searchValue) {\n      try {\n        const response = await backendEyeRestApi.searchEyeOrgByDistric(searchValue);\n        this.eyeOrg = response.data.map(organizations => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\"\n          }\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async searchEyeByUpazila(searchValue) {\n      try {\n        const response = await backendEyeRestApi.searchEyeOrgByUpazila(searchValue);\n        this.eyeOrg = response.data.map(organizations => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\"\n          }\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    goToEyeRequest(eyeOrgName, eyeOrgEmail) {\n      this.$router.push({\n        name: \"sendEyeRequest\",\n        params: {\n          orgName: bloodOrgName,\n          orgEmail: bloodOrganizationEmail\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["backendEyeRestApi","name","data","searchValue","searchOption","eyeOrg","created","fetchAllEyeOrg","methods","response","allEyeOrg","map","organizations","EyeOrganizationClass","eyeOrgId","eyeOrgName","eyeOrgEmail","eyeOrgDivision","eyeOrgDistric","eyeOrgUpazila","error","console","searchEyeOrg","searchEyeByDivision","searchEyeByDistric","searchEyeByUpazila","searchEyeOrgByDivision","searchEyeOrgByDistric","searchEyeOrgByUpazila","goToEyeRequest","$router","push","params","orgName","bloodOrgName","orgEmail","bloodOrganizationEmail"],"sources":["/home/annoy/vueJs project/blood-and-eye-org-system/src/views/User-eye-bank/eyeSearch.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Search Eye Bank</h1>\n    <div class=\"container text-center mt-5\">\n      <!-- Search form -->\n      <div class=\"row\">\n        <div class=\"col\">\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            v-model=\"searchOption\"\n          >\n            <option selected>Search By</option>\n            <option value=\"division\">Division</option>\n            <option value=\"distric\">Distric</option>\n            <option value=\"upazila\">Upazila</option>\n          </select>\n        </div>\n        <div class=\"col\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Enter Division or District or Upazila Name\"\n            aria-label=\"search\"\n            v-model=\"searchValue\"\n          />\n        </div>\n        <div class=\"col\">\n          <button\n            type=\"button\"\n            @click=\"searchEyeOrg(searchOption, searchValue)\"\n            class=\"btn btn-success\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div\n          class=\"col\"\n          v-for=\"organizations in eyeOrg\"\n          :key=\"organizations.EyeOrganizationClass.eyeOrgId\"\n        >\n          <div\n            class=\"card text-white bg-success mt-5 mb-3\"\n            style=\"max-width: 20rem\"\n          >\n            <div class=\"card-header\">\n              {{ organizations.EyeOrganizationClass.eyeOrgName }}\n            </div>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                {{ organizations.EyeOrganizationClass.eyeOrgEmail }}\n              </p>\n              <p class=\"card-text\">\n                {{ organizations.EyeOrganizationClass.eyeOrgDivision }}\n              </p>\n              <p class=\"card-text\">\n                {{ organizations.EyeOrganizationClass.eyeOrgDistric }}\n              </p>\n              <p class=\"card-text\">\n                {{ organizations.EyeOrganizationClass.eyeOrgUpazila }}\n              </p>\n\n              <button\n                @click=\"\n                  goToEyeRequest(\n                    organizations.EyeOrganizationClass.eyeOrgName,\n                    organizations.EyeOrganizationClass.eyeOrgEmail\n                  )\n                \"\n                class=\"btn btn-success\"\n                type=\"button\"\n              >\n                Send Request\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <footer class=\"footer bg-success py-4\">\n      <div class=\"container text-center\">\n        <span class=\"text-muted\">This is the footer content.</span>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport backendEyeRestApi from \"@/service/backendEyeRestApi\";\nexport default {\n  name: \"eyeSearch\",\n  data() {\n    return {\n      searchValue: \"\",\n      searchOption: \"\",\n      eyeOrg: [],\n    };\n  },\n  created() {\n    this.fetchAllEyeOrg();\n  },\n  methods: {\n    async fetchAllEyeOrg() {\n      try {\n        const response = await backendEyeRestApi.allEyeOrg();\n        this.eyeOrg = response.data.map((organizations) => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\",\n          },\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    searchEyeOrg(searchOption, searchValue) {\n      switch (searchOption) {\n        case \"division\":\n          this.searchEyeByDivision(searchValue);\n          break;\n        case \"distric\":\n          this.searchEyeByDistric(searchValue);\n          break;\n        case \"upazila\":\n          this.searchEyeByUpazila(searchValue);\n          break;\n      }\n    },\n\n    async searchEyeByDivision(searchValue) {\n      try {\n        const response = await backendEyeRestApi.searchEyeOrgByDivision(\n          searchValue\n        );\n        this.eyeOrg = response.data.map((organizations) => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\",\n          },\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async searchEyeByDistric(searchValue) {\n      try {\n        const response = await backendEyeRestApi.searchEyeOrgByDistric(\n          searchValue\n        );\n        this.eyeOrg = response.data.map((organizations) => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\",\n          },\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async searchEyeByUpazila(searchValue) {\n      try {\n        const response = await backendEyeRestApi.searchEyeOrgByUpazila(\n          searchValue\n        );\n        this.eyeOrg = response.data.map((organizations) => ({\n          EyeOrganizationClass: {\n            eyeOrgId: organizations.eyeOrgId || \"\",\n            eyeOrgName: organizations.eyeOrgName || \"\",\n            eyeOrgEmail: organizations.eyeOrgEmail || \"\",\n            eyeOrgDivision: organizations.eyeOrgDivision || \"\",\n            eyeOrgDistric: organizations.eyeOrgDistric || \"\",\n            eyeOrgUpazila: organizations.eyeOrgUpazila || \"\",\n          },\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    goToEyeRequest(eyeOrgName, eyeOrgEmail) {\n      this.$router.push({\n        name: \"sendEyeRequest\",\n        params: {\n          orgName: bloodOrgName,\n          orgEmail: bloodOrganizationEmail,\n        },\n      });\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}