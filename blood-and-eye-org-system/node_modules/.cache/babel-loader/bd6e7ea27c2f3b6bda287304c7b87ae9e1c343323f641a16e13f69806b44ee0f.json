{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'chatBotAI',\n  data() {\n    return {\n      API_Key: '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',\n      API_URL: 'https://api.openai.com/v1/chat/completions'\n    };\n  },\n  methods: {\n    GenerateText() {\n      if (this.$refs.query_area.value === '') {\n        alert('Invalid Input');\n        this.$refs.query_area.value = '';\n        return false;\n      } else {\n        this.$refs.myButton.disabled = true;\n        this.$refs.myButton.style.cursor = 'wait';\n        this.$refs.myButton.innerText = 'Generating....';\n        const headers = {\n          ' Authorization': `Bearer ${this.API_Key}`,\n          'Content-Type': 'application/json'\n        };\n        const data = {\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: this.$refs.query_area.value\n          }]\n        };\n        axios.post(this.API_URL, data, {\n          headers\n        }).then(response => {\n          console.log(response.data);\n          this.printLikeChatGPT(response.data.choices[0].message.content);\n          this.$refs.myButton.disabled = true;\n          this.$refs.myButton.innerText = 'Generate Text';\n          this.$refs.query_area.value = '';\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    printLikeChatGPT(data) {\n      this.$refs.myButton.disabled = false;\n      this.$refs.myButton.style.cursor = 'pointer';\n      const substring = data;\n      let i = 0;\n      const setInter = setInterval(() => {\n        this.$refs.text_area.value += substring.slice(i, i + 5);\n        i += 5;\n        if (this.$refs.text_area.value == data) {\n          clearInterval(setInter);\n        }\n      }, 200);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","API_Key","API_URL","methods","GenerateText","$refs","query_area","value","alert","myButton","disabled","style","cursor","innerText","headers","model","messages","role","content","post","then","response","console","log","printLikeChatGPT","choices","message","catch","error","substring","i","setInter","setInterval","text_area","slice","clearInterval"],"sources":["/home/annoy/vueJs project/blood-and-eye-org-system/src/views/chatBotAI.vue"],"sourcesContent":["<template>\n    <div>\n    <div class=\"card\">\n      <div class=\"card-border\">\n        <div class=\"container\">\n          <h1 style=\"margin: 20px;\">Generate Solutions using Open AI</h1>\n          <div class=\"Text-Area\">\n            <textarea id=\"text_area\" ref='text_area' cols=\"30\"  rows=\"10\"></textarea>\n          </div>\n          <div class=\"Query-Area\">\n            <input type=\"text\" ref='query_area' id=\"query_area\" placeholder=\"enter your Query\">\n          </div>\n          <div class=\"Btns\">\n            <button id=\"btn1\" ref=\"myButton\" @click=\"GenerateText\">Generate Text</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'chatBotAI',\n  data() {\n    return {\n      API_Key: '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',\n      API_URL: 'https://api.openai.com/v1/chat/completions'\n    }\n  },\n  methods: {\n    GenerateText() {\n      if (this.$refs.query_area.value === '') {\n        alert('Invalid Input');\n        this.$refs.query_area.value = '';\n        return false;\n      }\n      else {\n        this.$refs.myButton.disabled = true;\n        this.$refs.myButton.style.cursor = 'wait';\n        this.$refs.myButton.innerText = 'Generating....'\n        const headers = {\n          ' Authorization': `Bearer ${this.API_Key}`,\n          'Content-Type': 'application/json'\n        };\n        const data = {\n          model: 'gpt-3.5-turbo',\n          messages: [{ role: 'user', content: this.$refs.query_area.value }]\n        };\n        \n        axios.post(this.API_URL, data, { headers })\n          .then(response => {\n            console.log(response.data);\n           this.printLikeChatGPT(response.data.choices[0].message.content)\n            this.$refs.myButton.disabled = true;\n            this.$refs.myButton.innerText = 'Generate Text'\n            this.$refs.query_area.value = '';\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      }\n      \n    },\n    printLikeChatGPT(data)\n    {\n      this.$refs.myButton.disabled = false;\n      this.$refs.myButton.style.cursor = 'pointer';\n      const substring = data;\n      let i =0;\n       const setInter = setInterval(()=>{\n        this.$refs.text_area.value += substring.slice(i,i+5);\n        i +=5;\n        if(this.$refs.text_area.value == data)\n        {\n          clearInterval(setInter);\n        }\n      },200)\n\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  display: flex;\n   /* background-color: #504fb5;  */\n  height: 100%;\n  justify-content: center;\n}\n\n.card-border {\n  border: outset;\n  color: black;\n  background-image: url('../../assets/milky-way-2695569_1280.jpg');\n   box-shadow: rgba(132, 234, 229, 0.2) 0 80px 15px 15px;\n  /* background-image: linear-gradient(144deg,#AF40FF, #5B42F3 50%,#00DDEB);  */\n  border-radius: 20px;\n  \n}\n\n.container {\n  width: auto;\n  height: 100%;\n}\n.Text-Area {\n  display: flex;\n  height: 28rem;\n  justify-content: center;\n}\n\n#text_area {\n  resize: none;\n  height: 70%;\n  color: rgba(69, 115, 176, 0.855);\n  border-radius: 10px;\n  width: 90%;\n}\n\n.Query-Area {\n  display: flex;\n  justify-content: center;\n}\n\n#query_area {\n  display: flex;\n  color: rgb(44, 98, 89);\n  position: relative;\n  margin: 5px;\n  bottom: 130px;\n  width: 85%;\n  font-weight: bolder;\n  height: 30px;\n  padding: 10px;\n  border-radius: 10px;\n}\n\n.Btns {\n  display: flex;\n  justify-content: center;\n  position: relative;\n  bottom: 125px;\n  margin: 20px;\n  width: 100%;\n}\n\n#btn1 {\n  display: flex;\n  width: 80%;\n  background-color: black;\n  color: white;\n  height: 50px;\n  font-weight: bold;\n  border-radius: 12px;\n  justify-content: center;\n  align-items: center;\n  margin-right: 30px;\n}\n#btn1:hover {\n  display: flex;\n  width: 80%;\n  cursor:pointer;\n  background-color: white;\n  transition: 1s;\n  color: black;\n  border-radius: 12px;\n  justify-content: center;\n  align-items: center;\n  margin-right: 30px;\n}\n</style>"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,qDAAqD;MAC9DC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,KAAI,KAAM,EAAE,EAAE;QACtCC,KAAK,CAAC,eAAe,CAAC;QACtB,IAAI,CAACH,KAAK,CAACC,UAAU,CAACC,KAAI,GAAI,EAAE;QAChC,OAAO,KAAK;MACd,OACK;QACH,IAAI,CAACF,KAAK,CAACI,QAAQ,CAACC,QAAO,GAAI,IAAI;QACnC,IAAI,CAACL,KAAK,CAACI,QAAQ,CAACE,KAAK,CAACC,MAAK,GAAI,MAAM;QACzC,IAAI,CAACP,KAAK,CAACI,QAAQ,CAACI,SAAQ,GAAI,gBAAe;QAC/C,MAAMC,OAAM,GAAI;UACd,gBAAgB,EAAG,UAAS,IAAI,CAACb,OAAQ,EAAC;UAC1C,cAAc,EAAE;QAClB,CAAC;QACD,MAAMD,IAAG,GAAI;UACXe,KAAK,EAAE,eAAe;UACtBC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAE,IAAI,CAACb,KAAK,CAACC,UAAU,CAACC;UAAM,CAAC;QACnE,CAAC;QAEDT,KAAK,CAACqB,IAAI,CAAC,IAAI,CAACjB,OAAO,EAAEF,IAAI,EAAE;UAAEc;QAAQ,CAAC,EACvCM,IAAI,CAACC,QAAO,IAAK;UAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACrB,IAAI,CAAC;UAC3B,IAAI,CAACwB,gBAAgB,CAACH,QAAQ,CAACrB,IAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACR,OAAO;UAC7D,IAAI,CAACb,KAAK,CAACI,QAAQ,CAACC,QAAO,GAAI,IAAI;UACnC,IAAI,CAACL,KAAK,CAACI,QAAQ,CAACI,SAAQ,GAAI,eAAc;UAC9C,IAAI,CAACR,KAAK,CAACC,UAAU,CAACC,KAAI,GAAI,EAAE;QAClC,CAAC,EACAoB,KAAK,CAACC,KAAI,IAAK;UACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACN;IAEF,CAAC;IACDJ,gBAAgBA,CAACxB,IAAI,EACrB;MACE,IAAI,CAACK,KAAK,CAACI,QAAQ,CAACC,QAAO,GAAI,KAAK;MACpC,IAAI,CAACL,KAAK,CAACI,QAAQ,CAACE,KAAK,CAACC,MAAK,GAAI,SAAS;MAC5C,MAAMiB,SAAQ,GAAI7B,IAAI;MACtB,IAAI8B,CAAA,GAAG,CAAC;MACP,MAAMC,QAAO,GAAIC,WAAW,CAAC,MAAI;QAChC,IAAI,CAAC3B,KAAK,CAAC4B,SAAS,CAAC1B,KAAI,IAAKsB,SAAS,CAACK,KAAK,CAACJ,CAAC,EAACA,CAAC,GAAC,CAAC,CAAC;QACpDA,CAAA,IAAI,CAAC;QACL,IAAG,IAAI,CAACzB,KAAK,CAAC4B,SAAS,CAAC1B,KAAI,IAAKP,IAAI,EACrC;UACEmC,aAAa,CAACJ,QAAQ,CAAC;QACzB;MACF,CAAC,EAAC,GAAG;IAEP;EAEF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}