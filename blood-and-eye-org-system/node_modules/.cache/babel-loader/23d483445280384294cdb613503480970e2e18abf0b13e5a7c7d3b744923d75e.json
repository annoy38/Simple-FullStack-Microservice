{"ast":null,"code":"import backendRestApi from \"@/service/backendRestApi\";\nexport default {\n  name: \"deliveryRequestList\",\n  data() {\n    return {\n      deliveryReqList: []\n    };\n  },\n  created() {\n    this.fetchDeliveryRequests();\n  },\n  methods: {\n    async fetchDeliveryRequests() {\n      try {\n        const response = await backendRestApi.deliveryRequestList();\n        this.deliveryReqList = response.data.map(delivery => ({\n          DeliveryRequestClass: {\n            deliverId: delivery.deliverId || \"\",\n            organizationId: delivery.organizationId || \"\",\n            organizationName: delivery.organizationName || \"\",\n            organizationNumber: delivery.organizationNumber || \"\",\n            organizationLocation: delivery.organizationLocation || \"\",\n            patientName: delivery.patientName || \"\",\n            patientNumber: delivery.patientNumber || \"\",\n            hospitalName: delivery.hospitalName || \"\",\n            deliverItem: delivery.deliverItem || \"\",\n            status: delivery.status || \"\"\n          }\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["backendRestApi","name","data","deliveryReqList","created","fetchDeliveryRequests","methods","response","deliveryRequestList","map","delivery","DeliveryRequestClass","deliverId","organizationId","organizationName","organizationNumber","organizationLocation","patientName","patientNumber","hospitalName","deliverItem","status","error","console","log"],"sources":["/home/annoy/vueJs project/blood-and-eye-org-system/src/views/blood-org/deliveryRequestList.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Blood Delivery Request List</h1>\n    <div class=\"container\">\n      <table class=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Patient Name</th>\n            <th scope=\"col\">Patient Email</th>\n            <th scope=\"col\">Hospital Name</th>\n            <th scope=\"col\">Delivery Iteam</th>\n            <th scope=\"col\">Delivery Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            class=\"table-success\"\n            v-for=\"delivery in deliveryReqList\"\n            :key=\"delivery.DeliveryRequestClass.deliverId\"\n          >\n            <th scope=\"row\">{{ delivery.DeliveryRequestClass.patientName }}</th>\n            <td>{{ delivery.DeliveryRequestClass.patientNumber }}</td>\n            <td>{{ delivery.DeliveryRequestClass.hospitalName }}</td>\n            <td>{{ delivery.DeliveryRequestClass.deliverItem }}</td>\n            <td>{{ delivery.DeliveryRequestClass.status }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport backendRestApi from \"@/service/backendRestApi\";\nexport default {\n  name: \"deliveryRequestList\",\n  data() {\n    return {\n      deliveryReqList: [],\n    };\n  },\n  created() {\n    this.fetchDeliveryRequests();\n  },\n  methods: {\n    async fetchDeliveryRequests() {\n      try {\n        const response = await backendRestApi.deliveryRequestList();\n        this.deliveryReqList = response.data.map((delivery) => ({\n          DeliveryRequestClass: {\n            deliverId: delivery.deliverId || \"\",\n            organizationId: delivery.organizationId || \"\",\n            organizationName: delivery.organizationName || \"\",\n            organizationNumber: delivery.organizationNumber || \"\",\n            organizationLocation: delivery.organizationLocation || \"\",\n            patientName: delivery.patientName || \"\",\n            patientNumber: delivery.patientNumber || \"\",\n            hospitalName: delivery.hospitalName || \"\",\n            deliverItem: delivery.deliverItem || \"\",\n            status: delivery.status || \"\",\n          },\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":"AAiCA,OAAOA,cAAa,MAAO,0BAA0B;AACrD,eAAe;EACbC,IAAI,EAAE,qBAAqB;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,qBAAqB,CAAC,CAAC;EAC9B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,qBAAqBA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAME,QAAO,GAAI,MAAMP,cAAc,CAACQ,mBAAmB,CAAC,CAAC;QAC3D,IAAI,CAACL,eAAc,GAAII,QAAQ,CAACL,IAAI,CAACO,GAAG,CAAEC,QAAQ,KAAM;UACtDC,oBAAoB,EAAE;YACpBC,SAAS,EAAEF,QAAQ,CAACE,SAAQ,IAAK,EAAE;YACnCC,cAAc,EAAEH,QAAQ,CAACG,cAAa,IAAK,EAAE;YAC7CC,gBAAgB,EAAEJ,QAAQ,CAACI,gBAAe,IAAK,EAAE;YACjDC,kBAAkB,EAAEL,QAAQ,CAACK,kBAAiB,IAAK,EAAE;YACrDC,oBAAoB,EAAEN,QAAQ,CAACM,oBAAmB,IAAK,EAAE;YACzDC,WAAW,EAAEP,QAAQ,CAACO,WAAU,IAAK,EAAE;YACvCC,aAAa,EAAER,QAAQ,CAACQ,aAAY,IAAK,EAAE;YAC3CC,YAAY,EAAET,QAAQ,CAACS,YAAW,IAAK,EAAE;YACzCC,WAAW,EAAEV,QAAQ,CAACU,WAAU,IAAK,EAAE;YACvCC,MAAM,EAAEX,QAAQ,CAACW,MAAK,IAAK;UAC7B;QACF,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}