{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Delivery Request List\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"table table-hover\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Patient Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Patient Email\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Hospital Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Delivery Iteam\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Delivery Status\")])], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  scope: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.deliveryReqList, delivery => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      class: \"table-success\",\n      key: delivery.DeliveryRequestClass.deliverId\n    }, [_createElementVNode(\"th\", _hoisted_6, _toDisplayString(delivery.DeliveryRequestClass.patientName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(delivery.DeliveryRequestClass.patientNumber), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(delivery.DeliveryRequestClass.hospitalName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(delivery.DeliveryRequestClass.deliverItem), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(delivery.DeliveryRequestClass.status), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","deliveryReqList","delivery","key","DeliveryRequestClass","deliverId","_hoisted_6","_toDisplayString","patientName","patientNumber","hospitalName","deliverItem","status"],"sources":["/home/annoy/vueJs project/blood-and-eye-org-system/src/views/blood-org/deliveryRequestList.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Delivery Request List</h1>\n    <div class=\"container\">\n      <table class=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Patient Name</th>\n            <th scope=\"col\">Patient Email</th>\n            <th scope=\"col\">Hospital Name</th>\n            <th scope=\"col\">Delivery Iteam</th>\n            <th scope=\"col\">Delivery Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            class=\"table-success\"\n            v-for=\"delivery in deliveryReqList\"\n            :key=\"delivery.DeliveryRequestClass.deliverId\"\n          >\n            <th scope=\"row\">{{ delivery.DeliveryRequestClass.patientName }}</th>\n            <td>{{ delivery.DeliveryRequestClass.patientNumber }}</td>\n            <td>{{ delivery.DeliveryRequestClass.hospitalName }}</td>\n            <td>{{ delivery.DeliveryRequestClass.deliverItem }}</td>\n            <td>{{ delivery.DeliveryRequestClass.status }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport backendRestApi from \"@/service/backendRestApi\";\nexport default {\n  name: \"deliveryRequestList\",\n  data() {\n    return {\n      deliveryReqList: [],\n    };\n  },\n  created() {\n    this.fetchDeliveryRequests();\n  },\n  methods: {\n    async fetchDeliveryRequests() {\n      try {\n        const response = await backendRestApi.deliveryRequestList();\n        this.deliveryReqList = response.data.map((delivery) => ({\n          DeliveryRequestClass: {\n            deliverId: delivery.deliverId || \"\",\n            organizationId: delivery.organizationId || \"\",\n            organizationName: delivery.organizationName || \"\",\n            organizationNumber: delivery.organizationNumber || \"\",\n            organizationLocation: delivery.organizationLocation || \"\",\n            patientName: delivery.patientName || \"\",\n            patientNumber: delivery.patientNumber || \"\",\n            hospitalName: delivery.hospitalName || \"\",\n            deliverItem: delivery.deliverItem || \"\",\n            status: delivery.status || \"\",\n          },\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAA8B,YAA1B,uBAAqB;;EACpBD,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAmB;gCAC9BC,mBAAA,CAQQ,gB,aAPNA,mBAAA,CAMK,a,aALHA,mBAAA,CAAiC;EAA7BC,KAAK,EAAC;AAAK,GAAC,cAAY,G,aAC5BD,mBAAA,CAAkC;EAA9BC,KAAK,EAAC;AAAK,GAAC,eAAa,G,aAC7BD,mBAAA,CAAkC;EAA9BC,KAAK,EAAC;AAAK,GAAC,eAAa,G,aAC7BD,mBAAA,CAAmC;EAA/BC,KAAK,EAAC;AAAK,GAAC,gBAAc,G,aAC9BD,mBAAA,CAAoC;EAAhCC,KAAK,EAAC;AAAK,GAAC,iBAAe,E;;EAS3BA,KAAK,EAAC;AAAK;;uBAnBzBC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAA8B,EAC9BJ,mBAAA,CAyBM,OAzBNK,UAyBM,GAxBJL,mBAAA,CAuBQ,SAvBRM,UAuBQ,GAtBNC,UAQQ,EACRP,mBAAA,CAYQ,iB,kBAXNE,mBAAA,CAUKM,SAAA,QAAAC,WAAA,CARgBC,KAAA,CAAAC,eAAe,EAA3BC,QAAQ;yBAFjBV,mBAAA,CAUK;MATHH,KAAK,EAAC,eAAe;MAEpBc,GAAG,EAAED,QAAQ,CAACE,oBAAoB,CAACC;QAEpCf,mBAAA,CAAoE,MAApEgB,UAAoE,EAAAC,gBAAA,CAAjDL,QAAQ,CAACE,oBAAoB,CAACI,WAAW,kBAC5DlB,mBAAA,CAA0D,YAAAiB,gBAAA,CAAnDL,QAAQ,CAACE,oBAAoB,CAACK,aAAa,kBAClDnB,mBAAA,CAAyD,YAAAiB,gBAAA,CAAlDL,QAAQ,CAACE,oBAAoB,CAACM,YAAY,kBACjDpB,mBAAA,CAAwD,YAAAiB,gBAAA,CAAjDL,QAAQ,CAACE,oBAAoB,CAACO,WAAW,kBAChDrB,mBAAA,CAAmD,YAAAiB,gBAAA,CAA5CL,QAAQ,CAACE,oBAAoB,CAACQ,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}